#!/bin/bash

function getBranchCommit
{
    # Fill in version info from git
    # If there is no git or repo return none

    CODE_BRANCH_COMMIT="unknown"

    if which git >& /dev/null; then
        # if git exists check if we have working copy
	    git status >& /dev/null
        if [ $? == 0 ]; then
           BRANCH=`git branch | grep -e "\*" | sed -e "s/\* //"`
            echo $BRANCH | grep -q -e "no branch"
	        if [ $? == 0 ]; then
                BRANCH="no branch"
	        fi
            COMMIT=`git log --pretty=oneline | wc -l | sed -e "s/^ *//g"`
            CODE_BRANCH_COMMIT="$BRANCH-$COMMIT"
        fi
    fi
    echo ${CODE_BRANCH_COMMIT}
}


function getSHA
{
    # Fill in version info from git
    # If there is no git or repo return none

    SHA="unknown"

    if which git >& /dev/null; then
        # if git exists check if we have working copy
	    git status >& /dev/null
        if [ $? == 0 ]; then
            SHA=`git log --pretty=format:'%h' -n 1`
        fi
    fi
    echo ${SHA}
}


function getCodeVersion
{
    # Fill in version info from git
    # If there is no git or repo return RELEASE

    CODE_VERSION="unknown"

    if which git >& /dev/null; then
        # if git exists check if we have working copy
	    git status >& /dev/null
        if [ $? == 0 ]; then
            CODE_VERSION=`git describe --tags | sed "s/.........$//" \
                                | sed "s/-/\./" \
                                | sed "s/^v//"`
        fi
        MODIFIED=`git status -uno --porcelain | wc -l`
        if [ $MODIFIED -gt 0 ]; then
            CODE_VERSION="$CODE_VERSION-TOCOMMIT"
        else
            CODE_VERSION="$CODE_VERSION"
        fi
    fi
    echo ${CODE_VERSION}
}

function getDateTime
{
    date +"%Y-%m-%d %H:%M"
}

START_DIR=`dirname $0`

case "${1}" in
    version)
        getCodeVersion
        ;;
    buil-date)
        getDateTime
        ;;
    commit)
        getBranchCommit
        ;;
    sha)
        getSHA
        ;;
esac
